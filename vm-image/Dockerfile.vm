# Shadow VM Image Builder
# Multi-stage Docker build for creating Firecracker VM components

FROM ubuntu:22.04 AS base

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=20
ENV PYTHON_VERSION=3.11

# Install base dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    wget \
    gnupg \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Stage 1: Build sidecar binary
FROM node:20-alpine AS sidecar-builder

WORKDIR /app

# Copy sidecar source
COPY apps/sidecar/package*.json ./
COPY apps/sidecar/tsconfig*.json ./
COPY apps/sidecar/src ./src/
COPY packages ./packages/

# Install dependencies and build
RUN npm ci --only=production && \
    npm run build && \
    npm prune --production

# Stage 2: Create VM filesystem components
FROM base AS vm-components

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
    apt-get install -y nodejs

# Install Python and development tools
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    git \
    ripgrep \
    tmux \
    vim \
    nano \
    htop \
    systemd \
    systemd-sysv \
    openssh-server \
    sudo \
    locales \
    tzdata \
    && rm -rf /var/lib/apt/lists/*

# Install LSP servers
RUN pip3 install python-lsp-server[all] black isort flake8 mypy && \
    npm install -g typescript-language-server typescript eslint prettier

# Configure locale and timezone
RUN locale-gen en_US.UTF-8 && \
    update-locale LANG=en_US.UTF-8 && \
    ln -sf /usr/share/zoneinfo/UTC /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata

# Create shadow user
RUN useradd -m -s /bin/bash -G sudo shadow && \
    echo 'shadow:shadow' | chpasswd && \
    echo 'shadow ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \
    echo 'root:shadow' | chpasswd

# Configure SSH
RUN systemctl enable ssh && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config

# Stage 3: Final VM image
FROM vm-components AS final

# Copy sidecar binary from builder stage
COPY --from=sidecar-builder /app/dist /opt/shadow/
COPY --from=sidecar-builder /app/node_modules /opt/shadow/node_modules/
COPY apps/sidecar/package.json /opt/shadow/

# Create sidecar systemd service
RUN cat > /etc/systemd/system/shadow-sidecar.service << 'EOF' && \
[Unit]
Description=Shadow Sidecar Service
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/opt/shadow
ExecStart=/usr/bin/node server.js
Restart=always
RestartSec=10
Environment=NODE_ENV=production
Environment=PORT=8080

[Install]
WantedBy=multi-user.target
EOF
    systemctl enable shadow-sidecar.service

# Set working directory
WORKDIR /workspace

# Expose sidecar port
EXPOSE 8080

# Default command
CMD ["/opt/shadow/server.js"]